Project 2: Neural Networks for Indentifying Handwritten Digits

Student1: Mohammed Ibrahim
Student2: Oluwatobi Oni-Orisan


===========PART 2==================
We used a function that checked the values in the predicted set. If the value of every slot except the correct slot was less than 0.3 and the value in the correct slot was greater than 0.7 we declared that to be a "match". Else, we counted it as an error.

===========PART 3==================

Observations:
    - Learning Rate: 0.002
        - Number of Tests: 5000
        - Total Probable Errors: 5000
    - Learning Rate: 0.01
        - Number of Tests: 5000
        - Total Probable Errors: 5000
    - Learning Rate: 0.05
        - Number of Tests: 5000
        - Total probable errors: 4994
    - Learning Rate: 0.2
        - Number of Tests: 5000
        - Total probable errors: 4719
    - Learning Rate: 1.0
        - Number of Tests: 5000
        - Total probable errors: 3518
    - Learning Rate: 5.0
        -Number of Tests  5000
        -Total probable errors  1960  
    - Learning Rate: 20.0
        -Number of Tests  5000
        -Total probable errors  1667


===========PART 4(Momentum)==================

Observations :
    - Learning Rate: 0.002
        - Number of Tests: 5000
        - Total Probable Errors: 5000
    - Learning Rate: 0.01
        - Number of Tests: 5000
        - Total Probable Errors: 4878
    - Learning Rate: 0.05
        - Number of Tests: 5000
        - Total Probable Errors: 4227
    - Learning Rate: 0.2
        - Number of Tests: 5000
        - Total Probable Errors: 2716
    - Learning Rate: 1.0
        - Number of Tests: 5000
        - Total Probable Errors: 1427
    - Learning Rate: 5.0
        - Number of Tests: 5000
        - Total Probable Errors: 2602
    - Learning Rate: 20.0
        - Number of Tests: 5000
        - Total Probable Errors: 4618
Comments: We tweaked the learning Rate(tried values greater than 1 and less than 2 and alsobetween 2 and 3), The mometum (tried 8.0, 1.0 and 1.5) and the number of hidden layers (tried 100) and we concluded that the best learning rate we found was 2.6 (with the lowest error rate) 


===========PART 4(Generalization)==================




